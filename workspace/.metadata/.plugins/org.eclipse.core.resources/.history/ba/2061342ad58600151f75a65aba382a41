package aufgabenblatt2;

import static org.junit.Assert.*;
import org.junit.Test;

import aufgabenblatt2.Rechner.Operation;

public class JUnitRechner {

  @Test
  public void testeFunktionalesInterface() {
	IDoubleDoubleZuDouble demo;
	demo = (double op1, double op2) -> {
	  double erg1 = op1 * op2;
	  double erg2 = -op1 / op2;
	  return erg1 + erg2;
	};

	double expected = 5.333;

	assertEquals("Ergebnis", expected, demo.werteAus(2, 3), 0.001);
  }

  @Test
  public void testAddition() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.ADD, 1.2, 1.4);

	double expected = 2.6;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testAddition2() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.ADD, 1.2, -1.4);

	double expected = -0.2;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testDivision() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.DIV, 10.0, 2.0);

	double expected = 5.0;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testDivision2() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.DIV, 2.0, 10.0);

	double expected = 0.2;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testMultiplikation() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.MUL, 2.0, 10.0);

	double expected = 20.0;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }
  
  @Test
  public void testMultiplikation2() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.MUL, 7.3, -2.0);

	double expected = -14.6;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testSubtraktion() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.SUB, 2.0, 10.0);

	double expected = -8.0;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }

  @Test
  public void testSubtraktion2() {
	Rechner rechner = new Rechner();
	double erg = rechner.berechne(Operation.SUB, 5.0, 2.0);

	double expected = 3.0;

	assertEquals("Ergebnis", expected, erg, 0.001);
  }
  
//  @Test
//  public void testNix(){
//	new Rechner().berechne(Operation.NIX, 23, 24);
//  }

}
